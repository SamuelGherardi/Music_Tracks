@page
@model Music_Tracks.Pages.Admin.IndexModel
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
    var user = await UserManager.GetUserAsync(User);
    int control = 0; //controllo che serve per capire se l'utente autenticato è un amministratore oppure no
}
@if (SignInManager.IsSignedIn(User))
{

    @foreach (var item in Model.User)
    {


        @if (item.Email == user.ToString() && item.role == "administrator")
        {

            control = 1;

        }
    }


    @if (user.ToString() == "admin@admin.com" || control == 1)
    {
        

        <h1>Index</h1>

        <p>
            <a asp-page="Create">Create New</a>
        </p>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.User[0].role)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.User[0].Email)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.User)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.role)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <h1>Permission Denied.</h1>

    }
}
